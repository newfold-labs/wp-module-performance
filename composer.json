{
	"name": "newfold-labs/wp-module-performance",
	"description": "A module for managing caching functionality.",
	"license": "GPL-2.0-or-later",
	"authors": [
		{
			"name": "Micah Wood",
			"email": "micah@wpscholar.com"
		}
	],
	"autoload": {
		"psr-4": {
			"NewfoldLabs\\WP\\Module\\Performance\\": "includes"
		},
		"files": [
			"includes/PerformanceFeature.php",
			"includes/functions.php",
			"bootstrap.php"
		]
	},
	"repositories": [
		{
			"type": "composer",
			"url": "https://newfold-labs.github.io/satis/",
			"only": [
				"newfold-labs/*"
			]
		}
	],
	"require": {
		"newfold-labs/wp-module-context": "^1.0",
		"wp-forge/collection": "^1.0",
		"wp-forge/wp-htaccess-manager": "^1.0",
		"wpscholar/url": "^1.2",
		"newfold-labs/wp-module-features": "^1.5",
		"newfold-labs/wp-module-installer": "^1.4"
	},
	"require-dev": {
		"newfold-labs/wp-php-standards": "^1.2",
		"wp-cli/wp-cli-bundle": "^2.11",
		"wp-cli/i18n-command": "^2.6",
		"10up/wp_mock": "^1.1"
	},
	"scripts": {
		"test": "phpunit --bootstrap tests/phpunit/bootstrap.php",
		"cs-fix": "phpcbf --standard=phpcs.xml .",
		"cs-lint": "phpcs --standard=phpcs.xml -s .",
		"i18n-pot": "vendor/bin/wp i18n make-pot . ./languages/wp-module-performance.pot --domain=wp-module-performance --headers='{\"Report-Msgid-Bugs-To\":\"https://github.com/newfold-labs/wp-module-performance/issues\",\"POT-Creation-Date\":null}' --exclude=build,node_modules,src,tests",
		"i18n-po": "vendor/bin/wp i18n update-po ./languages/wp-module-performance.pot ./languages",
		"i18n-mo": "vendor/bin/wp i18n make-mo ./languages",
		"i18n-json": "rm -f languages/*.json && vendor/bin/wp i18n make-json ./languages --no-purge --pretty-print",
		"i18n-php": "vendor/bin/wp --allow-root i18n make-php ./languages",
		"i18n": [
			"@i18n-pot",
			"@i18n-po",
			"@i18n-mo",
			"@i18n-json",
			"@i18n-php"
		]
	},
	"scripts-descriptions": {
		"test": "Run PHPUnit tests",
		"i18n": "Generate files for translation.",
		"cs-fix": "Automatically fix coding standards issues where possible.",
		"cs-lint": "Check files against coding standards."
	},
	"config": {
		"allow-plugins": {
			"dealerdirect/phpcodesniffer-composer-installer": true
		}
	}
}
